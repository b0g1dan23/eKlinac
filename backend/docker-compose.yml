services:
  postgres:
    image: postgres:15-alpine
    container_name: codekids-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: codekids_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d codekids_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  db-migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev-deps
    container_name: codekids-db-migrate
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://postgres:postgres123@postgres:5432/codekids_db
    depends_on:
      postgres:
        condition: service_healthy
    command: [ "bunx", "drizzle-kit", "push" ]
    restart: "no"
    volumes:
      - .:/app
      - /app/node_modules

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: codekids-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://postgres:postgres123@postgres:5432/codekids_db
    depends_on:
      postgres:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  cron:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev-deps
    container_name: codekids-cron
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_URL=postgresql://postgres:postgres123@postgres:5432/codekids_db
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    command: >
      sh -c "
        apk add --no-cache curl &&
        echo '0 */6 * * * cd /app && bun run cron:delete-verifications' > /etc/crontabs/root &&
        crond -f -l 2
      "

volumes:
  postgres_data:
